{"version":3,"sources":["types/index.js","reducers/zipCodes.js","reducers/index.js","components/SearchForm/SearchForm.js","components/List/List.js","utils/createAction.js","actions/zipCodes.js","selectors/zipCodes.js","containers/App/App.js","index.js"],"names":["types","initialState","zipCodeNumber","loading","error","errorMessage","zipCodeInfo","listPlace","combineReducers","zipCodes","state","arguments","length","undefined","_ref","type","payload","ZIP_CODE","Object","objectSpread","newArr","concat","toConsumableArray","places","placeName","map","el","newPayload","filter","item","pos","indexOf","index","SearchForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onKeyPress","event","keyCode","which","keyValue","String","fromCharCode","test","preventDefault","_this$props","onSubmitData","onChangeZipCode","inputRef","react_default","a","createElement","onSubmit","ref","onChange","PureComponent","defaultProps","List","renderListItem","key","onClick","onRemoveListItem","action","meta","requestZipCodeError","getZipCodes","getZipCodeNumber","createSelector","_","get","getZipCodeInfo","getListPlace","getLoadingStatus","getErrorStatus","getErrorMessage","createStructuredSelector","loadingStatus","errorStatus","App","handleChangeZipCode","e","val","target","value","handleSubmitForm","fetchZipCode","searchInputRef","current","createRef","components_SearchForm_SearchForm","components_List_List","onRemovePlace","connect","zipCodesSelectors","code","dispatch","getState","fetch","then","res","json","data","err","catch","onAddPlace","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","render","es","containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d6559526.chunk.js","sourcesContent":["export default {\n  REQUESTED: 'ZIP_CODE.REQUESTED',\n  REQUESTED_SUCCESS: 'ZIP_CODE.REQUESTED_SUCCESS',\n  REQUESTED_FAILED: 'ZIP_CODE.REQUESTED_FAILED',\n  CHANGE_ZIP_CODE: 'ZIP_CODE.CHANGE_ZIP_CODE',\n  ADD_PLACE: 'ZIP_CODE.ADD_PLACE',\n  REMOVE_PLACE: 'ZIP_CODE.REMOVE_PLACE',\n};\n","import ZIP_CODE from '../types';\n\nconst initialState = {\n  zipCodeNumber: '',\n  loading: false,\n  error: false,\n  errorMessage: '',\n  zipCodeInfo: null,\n  listPlace: [],\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ZIP_CODE.REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n      };\n    case ZIP_CODE.REQUESTED_SUCCESS:\n      const newArr = [...state.listPlace, ...payload.places];\n      const placeName = newArr.map(el => el[\"place name\"]);\n      const newPayload = newArr.filter((item, pos) => {\n        return placeName.indexOf(item[\"place name\"]) === pos;\n      }); // remove duplicate items\n      return {\n        ...state,\n        zipCodeInfo: payload,\n        listPlace: newPayload,\n        loading: false,\n        error: false,\n      };\n    case ZIP_CODE.REQUESTED_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errorMessage: payload,\n      };\n\n    case ZIP_CODE.CHANGE_ZIP_CODE:\n      return {\n        ...state,\n        zipCodeNumber: payload\n      };\n\n    case ZIP_CODE.REMOVE_PLACE:\n      return {\n        ...state,\n        listPlace: state.listPlace.filter((item, index) => {\n          return index !== payload\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport zipCodes from './zipCodes';\n\nexport default combineReducers({\n  zipCodes,\n})\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchForm extends PureComponent {\n  static propTypes = {\n    onSubmitData: PropTypes.func.isRequired,\n    onChangeZipCode: PropTypes.func.isRequired,\n    inputRef: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  onKeyPress = (event) => {\n    const keyCode = event.keyCode || event.which;\n    const keyValue = String.fromCharCode(keyCode);\n    if (/\\+|-/.test(keyValue))\n      event.preventDefault();\n  };\n\n  render() {\n    const { onSubmitData, onChangeZipCode, inputRef } = this.props;\n    return(\n      <form onSubmit={onSubmitData}>\n          <input\n            ref={inputRef}\n            type=\"number\"\n            onKeyPress={this.onKeyPress}\n            onChange={onChangeZipCode}\n          />\n          <button type=\"submit\">GO</button>\n      </form>\n    )\n  }\n}\n\nexport default SearchForm\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass List extends PureComponent {\n  static propTypes = {\n    places: PropTypes.array.isRequired,\n    onRemoveListItem: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  renderListItem = (data = []) => {\n    return data.map((item, index) => {\n      return (\n        <li key={index}>\n          <p>\n            <span>State:{item[\"state\"]} </span>\n            <span>Place:{item[\"place name\"]} </span>\n            <i onClick={() => this.props.onRemoveListItem(index)}>&#65794;</i>\n          </p>\n        </li>\n      )\n    })\n  };\n\n  render() {\n    const { places } = this.props;\n    return(\n      <ul>\n        {this.renderListItem(places)}\n      </ul>\n    )\n  }\n}\n\nexport default List\n","const action = (type, payload, meta) => ({ type, payload, meta });\n\nexport default action;\n","import action from '../utils/createAction';\nimport ZIP_CODE from '../types';\n\n// api\nexport const requestZipCode = () => action(ZIP_CODE.REQUESTED);\nexport const requestZipCodeSuccess = (payload) => action(ZIP_CODE.REQUESTED_SUCCESS, payload);\nexport const requestZipCodeError = (payload) => action(ZIP_CODE.REQUESTED_FAILED, payload);\n\n// structure\nexport const onAddPlace = (payload) => action(ZIP_CODE.ADD_PLACE, payload);\nexport const onRemovePlace = (payload) => action(ZIP_CODE.REMOVE_PLACE, payload);\nexport const onChangeZipCode = (payload) => action(ZIP_CODE.CHANGE_ZIP_CODE, payload);\n\nexport const fetchZipCode = (code) => {\n  return (dispatch, getState) => { // dispatch, getState from thunk\n    dispatch(requestZipCode());\n    fetch(`https://api.zippopotam.us/us/${code}`)\n      .then(res => res.json())\n      .then(\n        data => dispatch(requestZipCodeSuccess(data)),\n        err => dispatch(requestZipCodeError(err))\n      )\n      .catch(\n        err =>  dispatch(requestZipCodeError(err))\n      )\n  }\n};\n","import { createSelector, createStructuredSelector } from 'reselect';\nimport _ from 'lodash';\n\nexport const getZipCodes = (state) => state.zipCodes;\n\nexport const getZipCodeNumber = createSelector(\n  getZipCodes,\n  (zipCodes) => _.get(zipCodes, 'zipCodeNumber'),\n);\n\nexport const getZipCodeInfo = createSelector(\n  getZipCodes,\n  (zipCodes) => _.get(zipCodes, 'zipCodeInfo'),\n);\n\nexport const getListPlace = createSelector(\n  getZipCodes,\n  (zipCodes) => _.get(zipCodes, 'listPlace'),\n);\n\n\nexport const getLoadingStatus = createSelector(\n  getZipCodes,\n  (zipCodes) => _.get(zipCodes, 'loading'),\n);\n\nexport const getErrorStatus = createSelector(\n  getZipCodes,\n  (zipCodes) => _.get(zipCodes, 'error'),\n);\n\nexport const getErrorMessage = createSelector(\n  getZipCodes,\n  (zipCodes) => _.get(zipCodes, 'errorMessage'),\n);\n\n\nexport default createStructuredSelector({\n  loadingStatus: getLoadingStatus,\n  errorStatus: getErrorStatus,\n  errorMessage: getErrorMessage,\n  zipCodeNumber: getZipCodeNumber,\n  zipCodeInfo: getZipCodeInfo,\n  listPlace: getListPlace,\n});\n\n","import React, { PureComponent, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport SearchForm from '../../components/SearchForm';\nimport List from '../../components/List';\nimport { fetchZipCode, onAddPlace, onRemovePlace, onChangeZipCode } from '../../actions/zipCodes';\nimport zipCodesSelectors from '../../selectors/zipCodes';\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.searchInputRef = createRef();\n  }\n\n  handleChangeZipCode = (e) => {\n    const val = e.target.value;\n    this.props.onChangeZipCode(val);\n  };\n\n  handleSubmitForm = (e) => {\n    e.preventDefault();\n    this.props.fetchZipCode(this.props.zipCodeNumber);\n    this.searchInputRef.current.value = '';\n  };\n\n  render() {\n    return(\n      <div>\n        <SearchForm\n         onSubmitData={this.handleSubmitForm}\n         onChangeZipCode={this.handleChangeZipCode}\n         inputRef={this.searchInputRef}\n         />\n        <List\n          places={this.props.listPlace}\n          onRemoveListItem={this.props.onRemovePlace}\n        />\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  // selectors\n  zipCodesSelectors,\n  { //actions\n    fetchZipCode,\n    onAddPlace,\n    onRemovePlace,\n    onChangeZipCode,\n  }\n)(App)\n","import React from 'react'\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport App from './containers/App';\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(thunk),\n));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}